package com.maxidev.horoscope.presentation.ui.theme

import androidx.compose.ui.graphics.Color

// Light Theme Colors
val lightPrimary = Color(0xFF9666FF)
val lightOnPrimary = Color(0xFFFFFFFF)
val lightPrimaryContainer = Color(0xFFE0C2FF)
val lightOnPrimaryContainer = Color(0xFF39006A)
val lightInversePrimary = Color(0xFFCAB0FF)
val lightSecondary = Color(0xFFB584FF)
val lightOnSecondary = Color(0xFFFFFFFF)
val lightSecondaryContainer = Color(0xFFD9C2FF)
val lightOnSecondaryContainer = Color(0xFF330061)
val lightTertiary = Color(0xFFB485FF)
val lightOnTertiary = Color(0xFFFFFFFF)
val lightTertiaryContainer = Color(0xFFD8C1FF)
val lightOnTertiaryContainer = Color(0xFF320060)
val lightBackground = Color(0xFFFFFFFF)
val lightOnBackground = Color(0xFF1C1B1F)
val lightSurface = Color(0xFFFFFFFF)
val lightOnSurface = Color(0xFF1C1B1F)
val lightSurfaceVariant = Color(0xFFE7E0EC)
val lightOnSurfaceVariant = Color(0xFF49454F)
val lightSurfaceTint = Color(0xFF9666FF)
val lightInverseSurface = Color(0xFF313033)
val lightInverseOnSurface = Color(0xFFE3E2E6)
val lightError = Color(0xFFB3261E)
val lightOnError = Color(0xFFFFFFFF)
val lightErrorContainer = Color(0xFFF9DEDC)
val lightOnErrorContainer = Color(0xFF410E0B)
val lightOutline = Color(0xFF79747E)
val lightOutlineVariant = Color(0xFFCAC4D0)
val lightScrim = Color(0xFF000000)
val lightSurfaceBright = Color(0xFFF4EFF4)
val lightSurfaceContainer = Color(0xFFF2C2FF)
val lightSurfaceContainerHigh = Color(0xFFD3A3FF)
val lightSurfaceContainerHighest = Color(0xFFB584FF)
val lightSurfaceContainerLow = Color(0xFFE7E0EC)
val lightSurfaceContainerLowest = Color(0xFFFFFFFF)
val lightSurfaceDim = Color(0xFFD4C7D5)

// Dark Theme Colors
val darkPrimary = Color(0xFF9466B2)
val darkOnPrimary = Color(0xFF000000)
val darkPrimaryContainer = Color(0xFF765196)
val darkOnPrimaryContainer = Color(0xFFE0C2FF)
val darkInversePrimary = Color(0xFF3A2259)
val darkSecondary = Color(0xFF765196)
val darkOnSecondary = Color(0xFF000000)
val darkSecondaryContainer = Color(0xFF583C7A)
val darkOnSecondaryContainer = Color(0xFFD9C2FF)
val darkTertiary = Color(0xFF775297)
val darkOnTertiary = Color(0xFF000000)
val darkTertiaryContainer = Color(0xFF593D7B)
val darkOnTertiaryContainer = Color(0xFFD8C1FF)
val darkBackground = Color(0xFF000000)
val darkOnBackground = Color(0xFFE3E2E6)
val darkSurface = Color(0xFF000000)
val darkOnSurface = Color(0xFFE3E2E6)
val darkSurfaceVariant = Color(0xFF49454F)
val darkOnSurfaceVariant = Color(0xFFCAC4D0)
val darkSurfaceTint = Color(0xFF9466B2)
val darkInverseSurface = Color(0xFFE3E2E6)
val darkInverseOnSurface = Color(0xFF313033)
val darkError = Color(0xFFF2B8B5)
val darkOnError = Color(0xFF601410)
val darkErrorContainer = Color(0xFF8C1D18)
val darkOnErrorContainer = Color(0xFFF9DEDC)
val darkOutline = Color(0xFF938F99)
val darkOutlineVariant = Color(0xFF49454F)
val darkScrim = Color(0xFF000000)
val darkSurfaceBright = Color(0xFF19171C)
val darkSurfaceContainer = Color(0xFF583C7A)
val darkSurfaceContainerHigh = Color(0xFF765196)
val darkSurfaceContainerHighest = Color(0xFF9466B2)
val darkSurfaceContainerLow = Color(0xFF49454F)
val darkSurfaceContainerLowest = Color(0xFF000000)
val darkSurfaceDim = Color(0xFF4C4450)

val RussianViolet = Color(0xFF3A2259)
val Black = Color(0xFF000000)
val MediumStateBlue = Color(0xFF9666FF)
val White = Color(0xFFFFFFFF)

val gradientBackgroundDark = listOf(Black, RussianViolet)
val gradientBackgroundLight = listOf(White, MediumStateBlue)